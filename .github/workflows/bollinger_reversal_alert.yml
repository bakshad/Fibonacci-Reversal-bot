name: Nifty50 Bollinger Reversal Bot

on:
  schedule:
    - cron: '*/15 3-10 * * 1-5'  # Every 15 min from 8:30â€“15:30 IST (03:00â€“10:00 UTC)
  workflow_dispatch:

jobs:
  bollinger-signals:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install pandas numpy yfinance ta tqdm requests

    - name: Run Bollinger Reversal Strategy
      run: python generate_bollinger_reversal_signals_nifty50.py

    - name: Send Telegram Alerts
      if: success()
      run: |
        import pandas as pd, os, requests

        file = 'bollinger_reversal_signals.csv'
        if not os.path.exists(file):
            print("No file found")
            exit(0)

        df = pd.read_csv(file)
        if df.empty:
            print("No signals today.")
            exit(0)

        token = '${{ secrets.TELEGRAM_BOT_TOKEN }}'
        chat_id = '${{ secrets.TELEGRAM_CHAT_ID }}'

        for _, row in df.iterrows():
            msg = (
                f"ðŸ“ˆ *{row['Symbol']}* - *{row['SignalType']} Reversal*\\n"
                f"ðŸ’° Close: â‚¹{row['Close']:.2f}  |  RSI: {row['RSI']:.1f}\\n"
                f"ðŸŸ¢ Option: {row['Option']}\\n"
                f"ðŸŽ¯ Target: â‚¹{row['TargetPrice']}  |  ðŸ›‘ SL: â‚¹{row['SL']}\\n"
                f"ðŸ“… {row['Date']}"
            )
            requests.post(
              f"https://api.telegram.org/bot{token}/sendMessage",
              data={'chat_id': chat_id, 'text': msg, 'parse_mode': 'Markdown'}
            )
      shell: python

    - name: Upload Signal CSV
      uses: actions/upload-artifact@v4
      with:
        name: bollinger_reversal_signals
        path: bollinger_reversal_signals.csv
